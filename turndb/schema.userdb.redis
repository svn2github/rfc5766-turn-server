
I. The "default" database

Redis "default" database for user authentication and peer permissions 
has the following schema:

1) For the long-term credentials there must be keys 
"turn/user/<username>/key" and the values must be the the hmackeys. 
For example, for the user "gorst", realm "north.gov" and password "hero",
there must be key "turn/user/gorst/key" with value 
"7da2270ccfa49786e0115366d3a3d14d". Alternatively, the password may
be stored in clear text format. Then the key will be 
"turn/user/gorst/password" and the key will be simply "hero".

2) For the short-term credentials, the passwords are stored always on
clear text format. So, there will be key "turn/user/gorst/password" and 
the value will be "hero".

3) For the shared secrets (REST API), several key/value pairs 
may be used (same as in SQL schema). The key will be 
"turn/secret/<arbitrary secret ID>" and the value will be 
"<secret>". For example, if we have secrets "hero1", "hero2" and "hero3", 
then we will have keys "turn/secret/A", "turn/secret/B", "turn/secret/777" 
and their values will be  "hero1", "hero2", "hero3". The turnserver will 
issue command "keys turn/secret/*" it it will try to use the returned keys
in arbitrary order.

4) The "white" and "black" peer IP ranges are stored as keys of the
following form: "turn/allowed-peer-ip/<arbitrary>" or 
"turn/denied-peer-ip/<arbitrary>"

The meaning of the keys is the same as the meaning of allowed-peer-ip and
denied-peer-ip turnserver command-line option. The only difference is that 
the option values are "static" (they remain the same for the lifetime of 
the turnserver process) but the database records can be dynamically changed 
and they will be almost immediately "seen" by the turnserver process.

II. Extra realms data in the default database

We can use more than one realm with the same instance of the TURN server.
This is done through the ORIGIN mechanism - users with different ORIGINS
are placed into different realms. Each non-default realm has a separate 
database. The "default" database includes information about the
relationships between the ORIGIN and realms, and about the extra realms
database numbers.

1) The relationship between ORIGIN and realm is set as keys of form:
"turn/origin/<origin>" with the realm-names as the value. Many different
ORIGIN keys may have the same realm. If the ORIGIN value is not found in 
the database or the ORIGIN field is missed in the initial allocate 
request, then the default realm is assumed.

2) The realm readis database number. The keys are of form 
"turn/realm/<realm-name>/db" with value as the realm redis database number.

III. Extra realm databases

If we use more than one realm for the long-term credentials (including the 
REST API long-term credentials modification) then we use a separate user 
database for each realm. Each realm has its own keys for the long-term 
credentials users (whether "classic" long-term credentials or the "REST API"
modification).

IV) Example of a Redis default user database setup.

This example sets user database for:

  * long-term credentials with open passwords;
  * long-term credentials with hashed passwords and 
  	with default realm "north.gov";
  * short-term credentials mechanism;
  * TURN REST API with shared secret "logen";
  * Black and white IP peer lists used.
  * Information how to match ORIGIN field with extra
    realms (if used) and where to find the extra realms
    information (the redis database numbers).
  
The shell command would be:

$ redis-cli <<!

SELECT 0
AUTH turn

set turn/user/ninefingers/key "bc807ee29df3c9ffa736523fb2c4e8ee"
set turn/user/gorst/key "7da2270ccfa49786e0115366d3a3d14d"

set turn/user/ninefingers/password "youhavetoberealistic"
set turn/user/gorst/password "hero"

set turn/secret/1368426581 "logen"

set turn/denied-peer-ip/123456 "172.17.13.133-172.17.14.56"
set turn/denied-peer-ip/234567 "123::45"

set turn/allowed-peer-ip/345678 "172.17.13.200"

set turn/origin/http://crinna.org crinna.org
set turn/origin/http://bligh.edu crinna.org

set turn/realm/crinna.org/db 7

save

!

V. Extra realm "crinna.org" database example.

  * long-term credentials with open passwords;
  * long-term credentials with hashed passwords and 
  	with realm "crinna.org";
  * TURN REST API with shared secret "civilization";
  
$ redis-cli <<!

SELECT 7
AUTH turn

set turn/user/whirrun/key "6972e85e51f36e53b0b61759c5a5219a"
set turn/user/stranger-come-knocking/key "d43cb678560259a1839bff61c19de15e"

set turn/user/whirrun/password "sword"
set turn/user/stranger-come-knocking/password "civilization"

set turn/secret/777888999 "civilization"

save

!

VI. Redis database configuration parameters

TURN Server connects to the Redis and keeps the same connection during the 
TURN server lifetime. That means that we have to take care about that 
connection - it must NOT expire.

You have to take care about Redis connection parameters, the timeout and the 
keepalive. The following settings must be in your Redis config file
(/etc/redis.conf or /usr/local/etc/redis.conf):

..........
timeout 0
..........
tcp-keepalive 60
..........

 
